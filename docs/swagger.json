{
    "swagger": "2.0",
    "info": {
        "description": "Hospital Management System API.",
        "title": "HMS API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Log in as a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login Data",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error or invalid input",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User Registration Data",
                        "name": "userRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Validation error or invalid input",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/patients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Receptionists and Doctors can list all registered patients.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "List all registered patients",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Limit (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Patient"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/patients/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Doctors can register a new patient.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "Register a new patient",
                "parameters": [
                    {
                        "description": "Patient Registration Data",
                        "name": "patientRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PatientCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Patient"
                        }
                    },
                    "400": {
                        "description": "Validation error or invalid input",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Receptionists and Doctors can get details of a specific patient.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "Get details of a specific patient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Patient"
                        }
                    },
                    "400": {
                        "description": "Invalid patient ID format",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Only doctors can delete patient records",
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a patient record",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Patient record deleted successfully"
                    },
                    "400": {
                        "description": "Validation error, invalid input, or invalid patient ID",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden (e.g., if trying to update restricted fields)",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Receptionists can update most patient details. Doctors can update patient details, especially medical history.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "Update patient details",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient Update Data (fields to update)",
                        "name": "patientRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PatientUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Patient"
                        }
                    },
                    "400": {
                        "description": "Validation error, invalid input, or invalid patient ID",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden (e.g., if trying to update restricted fields)",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/visits/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Doctors can record a visit for a patient.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visits"
                ],
                "summary": "Record a visit for a patient",
                "parameters": [
                    {
                        "description": "Visit details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PatientVisitCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.PatientVisit"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Failed to record patient visit",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/visits/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Doctors and Receptionists can get details of a specific patient visit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visits"
                ],
                "summary": "Get details of a specific patient visit",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Visit ID (UUID) for which to get details",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PatientVisit"
                        }
                    },
                    "400": {
                        "description": "Invalid visit ID format",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Visit not found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Doctors can update patient visit details they recorded. Doctor ID is taken from authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visits"
                ],
                "summary": "Update a specific patient visit",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Visit ID (UUID) for which to update details",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient visit details to update",
                        "name": "visit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PatientVisitUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PatientVisit"
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Visit not found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/visits/{id}/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Doctors and Receptionists can list patient visits for a specific patient.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visits"
                ],
                "summary": "List patient visits for a specific patient",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID (UUID) for which to list visits",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Added validation",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Added validation",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid patient ID format",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.APIError": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Can be map[string]string for validation errors, or a simple string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.Gender": {
            "type": "string",
            "enum": [
                "male",
                "female",
                "other"
            ],
            "x-enum-varnames": [
                "GenderMale",
                "GenderFemale",
                "GenderOther"
            ]
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "description": "This User struct is from our model package",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.User"
                        }
                    ]
                }
            }
        },
        "model.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "The actual list of items"
                },
                "limit": {
                    "description": "The limit used for this page",
                    "type": "integer"
                },
                "offset": {
                    "description": "The offset used for this page",
                    "type": "integer"
                },
                "page": {
                    "description": "Current page number (calculated: offset/limit + 1)",
                    "type": "integer"
                },
                "total": {
                    "description": "Total number of items available across all pages",
                    "type": "integer"
                },
                "total_pages": {
                    "description": "Total pages (calculated: ceil(total/limit))",
                    "type": "integer"
                }
            }
        },
        "model.Patient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "contact_phone": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "description": "Recommended to store as full timestamp, format for display",
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/model.Gender"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "medical_history": {
                    "type": "string"
                },
                "registered_by_user_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.PatientCreateRequest": {
            "type": "object",
            "required": [
                "date_of_birth",
                "first_name",
                "last_name"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 500
                },
                "contact_email": {
                    "type": "string",
                    "maxLength": 255
                },
                "contact_phone": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "gender": {
                    "enum": [
                        "male",
                        "female",
                        "other"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Gender"
                        }
                    ]
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "medical_history": {
                    "type": "string"
                }
            }
        },
        "model.PatientUpdateRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 500
                },
                "contact_email": {
                    "type": "string",
                    "maxLength": 255
                },
                "contact_phone": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "gender": {
                    "enum": [
                        "male",
                        "female",
                        "other",
                        "prefer_not_to_say"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Gender"
                        }
                    ]
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "medical_history": {
                    "description": "Doctors can update this",
                    "type": "string"
                }
            }
        },
        "model.PatientVisit": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "diagnosis": {
                    "type": "string"
                },
                "doctor_id": {
                    "description": "The user ID of the doctor who conducted the visit",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "notes": {
                    "description": "Additional notes by doctor or about the visit",
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "prescription": {
                    "type": "string"
                },
                "symptoms": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visit_date": {
                    "description": "Timestamp of the visit",
                    "type": "string"
                }
            }
        },
        "model.PatientVisitCreateRequest": {
            "type": "object",
            "required": [
                "patient_id"
            ],
            "properties": {
                "diagnosis": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "prescription": {
                    "type": "string"
                },
                "symptoms": {
                    "type": "string"
                },
                "visit_date": {
                    "description": "Expect RFC3339. If empty, handler might default to time.Now()",
                    "type": "string"
                }
            }
        },
        "model.PatientVisitUpdateRequest": {
            "type": "object",
            "properties": {
                "diagnosis": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "prescription": {
                    "type": "string"
                },
                "symptoms": {
                    "type": "string"
                },
                "visit_date": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.UserRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserCreateRequest": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "enum": [
                        "receptionist",
                        "doctor"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.UserRole"
                        }
                    ]
                },
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "model.UserRole": {
            "type": "string",
            "enum": [
                "receptionist",
                "doctor"
            ],
            "x-enum-varnames": [
                "RoleReceptionist",
                "RoleDoctor"
            ]
        }
    }
}